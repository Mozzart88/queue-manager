openapi: 3.1.1
info:
  title: Message API
  description: API for managing messages
  version: 1.0.0

paths:
  /msg:
    get:
      summary: Retrieve oldest unprocessed message or message with given id
      description: Returns oldest unprocessed message or message with given id or Not Found Error.
      parameters:
        - name: id
          in: query
          description: Filter by message ID
          required: false
          schema:
            type: number
      responses:
        200:
          description: Message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        404:
          description: Message with given id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'

    post:
      summary: Add message to the queue
      description: Adds a new message to the queue.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageInput'
      responses:
        201:
          description: Message created
          content:
            application/json:
              schema:
                type: object
                properties:
                  code: 
                    type: number
                  msg:
                    type: object
                    properties:
                      id:
                        type: number
    patch:
      summary: Update state of an existing message
      description: Updates state of a specific message by ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageUpdate'
      responses:
        200:
          description: Message updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
        404:
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'

    delete:
      summary: Delete a message
      description: Removes a message from the queue.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
      responses:
        204:
          description: Message deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'
        404:
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonError'

components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: number
          example: 123
        msg:
          type: string
          example: "{\"some\": \"content\"}"
        publisher:
          type: string
          example: "Pagina 12"
        state:
          type: string
          example: "new"

    MessageInput:
      type: object
      required:
        - msg
        - publisher
      properties:
        msg:
          type: string
          example: "{\"some\": \"content\"}"
        publisher:
          type: string
          example: "Pagina 12"

    MessageUpdate:
      type: object
      required:
        - id
        - state
      properties:
        id:
          type: number
          example: 123
        state:
          type: string
          example: "new"
    
    CommonError:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string